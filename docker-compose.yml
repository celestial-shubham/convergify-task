version: "3.8"

services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: chat-postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    environment:
      POSTGRES_DB: chatapp
      POSTGRES_USER: chatuser
      POSTGRES_PASSWORD: chatpass
      POSTGRES_INITDB_ARGS: "--auth-local=trust"
    networks:
      - chat-network

  # Redis for pub/sub
  redis:
    image: redis:7-alpine
    container_name: chat-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chat-network

  # User Service
  user-service:
    build: ./services/user
    container_name: chat-user-service
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://chatuser:chatpass@postgres:5432/chatapp
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    networks:
      - chat-network

  # Chat Service Instance 1
  chat-service-1:
    build: ./services/chat
    container_name: chat-service-1
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://chatuser:chatpass@postgres:5432/chatapp
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=3002
    ports:
      - "3002:3002"
    depends_on:
      - postgres
      - redis
    networks:
      - chat-network

  # Chat Service Instance 2
  chat-service-2:
    build: ./services/chat
    container_name: chat-service-2
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://chatuser:chatpass@postgres:5432/chatapp
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=3003
    ports:
      - "3003:3003"
    depends_on:
      - postgres
      - redis
    networks:
      - chat-network

  # Frontend
  frontend:
    build: ./frontend
    container_name: chat-frontend
    ports:
      - "3000:80"
    depends_on:
      - user-service
      - chat-service-1
      - chat-service-2
    networks:
      - chat-network

networks:
  chat-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: